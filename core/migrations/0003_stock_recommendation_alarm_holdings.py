# Generated by Django 4.2.23 on 2025-09-21 10:10

from decimal import Decimal
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    dependencies = [
        ('core', '0002_gmailshareconfig'),
    ]

    operations = [
        migrations.CreateModel(
            name='Stock',
            fields=[
                ('isin', models.CharField(help_text='Internationale Wertpapierkennnummer (12 Zeichen)', max_length=12, primary_key=True, serialize=False)),
                ('wkn', models.CharField(blank=True, help_text='Wertpapierkennnummer (6 Zeichen, hauptsächlich für deutsche Werte)', max_length=6, null=True, unique=True)),
                ('symbol', models.CharField(blank=True, help_text='Börsenkürzel (z.B. AAPL, SAP)', max_length=10, null=True)),
                ('name', models.CharField(help_text='Vollständiger Name der Aktie/Unternehmens', max_length=200)),
                ('currency', models.CharField(default='EUR', help_text='Währung als ISO-Code (EUR, USD, etc.)', max_length=3)),
                ('exchange', models.CharField(blank=True, help_text='Hauptbörse (XETRA, NYSE, NASDAQ, etc.)', max_length=50, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'verbose_name': 'Aktie',
                'verbose_name_plural': 'Aktien',
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Recommendation',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(choices=[('buy', 'Kaufen'), ('sell', 'Verkaufen'), ('hold', 'Halten'), ('strong_buy', 'Stark Kaufen'), ('strong_sell', 'Stark Verkaufen')], default='hold', help_text='Empfohlene Aktion', max_length=15)),
                ('source', models.CharField(help_text='Quelle der Empfehlung (Analyst, Bank, Website, etc.)', max_length=100)),
                ('target_price', models.DecimalField(blank=True, decimal_places=4, help_text='Kursziel', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('confidence', models.IntegerField(blank=True, choices=[(1, 'Sehr niedrig'), (2, 'Niedrig'), (3, 'Mittel'), (4, 'Hoch'), (5, 'Sehr hoch')], default=3, help_text='Vertrauensgrad der Empfehlung', null=True)),
                ('strategy', models.IntegerField(blank=True, choices=[(1, 'Safety First'), (2, 'Dividende'), (3, 'AI'), (4, 'sonstige Tech'), (5, 'Defense'), (6, 'Turnaround Kandidat'), (7, 'Burggraben'), (99, 'Sonstiges')], default=99, help_text='Vertrauensgrad der Empfehlung', null=True)),
                ('reasoning', models.TextField(blank=True, help_text='Begründung für die Empfehlung')),
                ('publication_date', models.DateField(blank=True, help_text='Datum der Veröffentlichung', null=True)),
                ('url', models.URLField(blank=True, help_text='Link zur ursprünglichen Empfehlung', null=True)),
                ('is_valid', models.BooleanField(default=True, help_text='Empfehlung ist noch gültig')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='recommendations', to='core.stock')),
            ],
            options={
                'verbose_name': 'Empfehlung',
                'verbose_name_plural': 'Empfehlungen',
                'ordering': ['-publication_date'],
            },
        ),
        migrations.CreateModel(
            name='Alarm',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('threshold_value_high', models.DecimalField(blank=True, decimal_places=4, help_text='Schwellwert (Preis oder Prozent)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('threshold_value_low', models.DecimalField(blank=True, decimal_places=4, help_text='Schwellwert (Preis oder Prozent)', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('is_active', models.BooleanField(default=True, help_text='Alarm ist aktiv')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='alarms', to='core.stock')),
            ],
            options={
                'verbose_name': 'Alarm',
                'verbose_name_plural': 'Alarme',
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='Holdings',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('quantity', models.DecimalField(decimal_places=6, help_text='Anzahl gehaltener Aktien (auch Bruchteile möglich)', max_digits=12, validators=[django.core.validators.MinValueValidator(Decimal('0.000001'))])),
                ('average_purchase_price', models.DecimalField(blank=True, decimal_places=4, help_text='Durchschnittlicher Einkaufspreis', max_digits=12, null=True, validators=[django.core.validators.MinValueValidator(Decimal('0.01'))])),
                ('category', models.IntegerField(blank=True, choices=[(1, 'Basis Investment'), (2, 'Dividende'), (3, 'D/EU'), (4, 'US Tech'), (5, 'World Tech'), (99, 'Sonstiges')], default=99, help_text='Vertrauensgrad der Empfehlung', null=True)),
                ('notes', models.TextField(blank=True, help_text='Persönliche Notizen zu dieser Position', null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('stock', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holdings', to='core.stock')),
            ],
            options={
                'verbose_name': 'Bestand',
                'verbose_name_plural': 'Bestände',
                'ordering': ['-quantity'],
                'unique_together': {('stock',)},
            },
        ),
    ]
